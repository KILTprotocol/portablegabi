import { Codec, InterfaceTypes } from '../../types';
import { FromReg } from './types';
import { InterfaceRegistry } from '../../interfaceRegistry';
export declare function createTypeUnsafe<T extends Codec = Codec, K extends string = string>(type: K, params?: any[], isPedantic?: boolean): FromReg<T, K>;
/**
 * Create an instance of a `type` with a given `params`.
 * @param type - A recognizable string representing the type to create an
 * instance from
 * @param params - The value to instantiate the type with
 */
export declare function createType<K extends InterfaceTypes>(type: K, ...params: any[]): InterfaceRegistry[K];
