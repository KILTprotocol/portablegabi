import { EventMetadataV3, FunctionMetadataV3 } from '../../interfaces/metadata';
import { MetadataInterface } from '../types';
import Option from '../../codec/Option';
import Struct from '../../codec/Struct';
import Vec from '../../codec/Vec';
import Text from '../../primitive/Text';
import { StorageFunctionMetadata } from './Storage';
/**
 * @name ModuleMetadataV3
 * @description
 * The definition of a module in the system
 */
export declare class ModuleMetadataV3 extends Struct {
    constructor(value?: any);
    /**
     * @description the module calls
     */
    get calls(): Option<Vec<FunctionMetadataV3>>;
    /**
     * @description the module events
     */
    get events(): Option<Vec<EventMetadataV3>>;
    /**
     * @description the module name
     */
    get name(): Text;
    /**
     * @description the module prefix
     */
    get prefix(): Text;
    /**
     * @description the associated module storage
     */
    get storage(): Option<Vec<StorageFunctionMetadata>>;
}
/**
 * @name MetadataV3
 * @description
 * The runtime metadata as a decoded structure
 */
export default class MetadataV3 extends Struct implements MetadataInterface<ModuleMetadataV3> {
    constructor(value?: any);
    /**
     * @description The associated modules for this structure
     */
    get modules(): Vec<ModuleMetadataV3>;
}
