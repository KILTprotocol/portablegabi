"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.info = info;

var _rxjs = require("rxjs");

var _operators = require("rxjs/operators");

var _util = require("@polkadot/util");

var _util2 = require("../util");

// Copyright 2017-2019 @polkadot/api-derive authors & contributors
// This software may be modified and distributed under the terms
// of the Apache-2.0 license. See the LICENSE file for details.
function retrieveNick(api, accountId) {
  return accountId && api.query.nicks ? api.query.nicks.nameOf(accountId).pipe((0, _operators.map)(nameOf => (nameOf === null || nameOf === void 0 ? void 0 : nameOf.isSome) ? (0, _util.u8aToString)(nameOf.unwrap()[0]).substr(0, api.consts.nicks.maxLength.toNumber()) : undefined)) : (0, _rxjs.of)(undefined);
}
/**
 * @name info
 * @description Returns aux. info with regards to an account, current that includes the accountId, accountIndex and nickname
 */


function info(api) {
  return address => api.derive.accounts.idAndIndex(address).pipe((0, _operators.switchMap)((_ref) => {
    let [accountId, accountIndex] = _ref;
    return (0, _rxjs.combineLatest)([(0, _rxjs.of)({
      accountId,
      accountIndex
    }), retrieveNick(api, accountId)]);
  }), (0, _operators.map)((_ref2) => {
    let [{
      accountId,
      accountIndex
    }, nickname] = _ref2;
    return {
      accountId,
      accountIndex,
      nickname
    };
  }), (0, _util2.drr)());
}