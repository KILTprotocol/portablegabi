"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.indexToId = indexToId;

var _operators = require("rxjs/operators");

var _AccountIndex = require("@polkadot/types/primitive/Generic/AccountIndex");

var _types = require("@polkadot/types");

var _util = require("../util");

// Copyright 2017-2019 @polkadot/api-derive authors & contributors
// This software may be modified and distributed under the terms
// of the Apache-2.0 license. See the LICENSE file for details.

/**
 * @name indexToId
 * @param {( AccountIndex | string )} accountIndex - An accounts index in different formats.
 * @returns Returns the corresponding AccountId.
 * @example
 * <BR>
 *
 * ```javascript
 * api.derive.accounts.indexToId('F7Hs', (accountId) => {
 *   console.log(`The AccountId of F7Hs is ${accountId}`);
 * });
 * ```
 */
function indexToId(api) {
  const querySection = api.query.indices || api.query.balances;
  return _accountIndex => {
    const accountIndex = _accountIndex instanceof (0, _types.ClassOf)('AccountIndex') ? _accountIndex : (0, _types.createType)('AccountIndex', _accountIndex);
    return querySection.enumSet(accountIndex.div(_AccountIndex.ENUMSET_SIZE)).pipe((0, _operators.startWith)([]), (0, _operators.map)(accounts => (accounts || [])[accountIndex.mod(_AccountIndex.ENUMSET_SIZE).toNumber()]), (0, _util.drr)());
  };
}