"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.approvalsOf = approvalsOf;

var _operators = require("rxjs/operators");

var _approvalFlagsToBools = require("../util/approvalFlagsToBools");

var _util = require("../util");

// Copyright 2017-2019 @polkadot/api-derive authors & contributors
// This software may be modified and distributed under the terms
// of the Apache-2.0 license. See the LICENSE file for details.

/**
 * @name approvalsOf
 * @returns A nested array of boolean approvals for the given account in each voter set index, converted from its ApprovalFlag(s).
 * @example
 * <BR>
 *
 * ```javascript
 * api.derive.elections.approvalsOf(ALICE, (approvals) => {
 *   // approvals === [[false], [true, false], ...]
 * });
 * ```
 */
function approvalsOf(api) {
  return who => api.query.elections.nextVoterSet().pipe((0, _operators.switchMap)(nextVoterSet => api.query.elections.approvalsOf.multi([...Array(nextVoterSet.toNumber() + 1).keys()].map(i => [who.toString(), i]))), (0, _operators.map)(votes => votes.map(flags => (0, _approvalFlagsToBools.approvalFlagsToBools)(flags))), (0, _util.drr)());
}