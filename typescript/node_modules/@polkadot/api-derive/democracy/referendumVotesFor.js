"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.referendumVotesFor = referendumVotesFor;

var _rxjs = require("rxjs");

var _operators = require("rxjs/operators");

var _types = require("@polkadot/types");

var _util = require("../util");

// Copyright 2017-2019 @polkadot/api-derive authors & contributors
// This software may be modified and distributed under the terms
// of the Apache-2.0 license. See the LICENSE file for details.
function referendumVotesFor(api) {
  return referendumId => api.query.democracy.votersFor(referendumId).pipe((0, _operators.switchMap)(votersFor => (0, _rxjs.combineLatest)([(0, _rxjs.of)(votersFor), api.derive.democracy.votes(referendumId, votersFor), api.derive.balances.votingBalances(votersFor)])), (0, _operators.map)((_ref) => {
    let [votersFor, votes, balances] = _ref;
    return votersFor.map((accountId, index) => ({
      accountId,
      balance: balances[index].votingBalance || (0, _types.createType)('Balance'),
      vote: votes[index] || (0, _types.createType)('Vote')
    }));
  }), (0, _util.drr)());
}