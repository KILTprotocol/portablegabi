"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "StorageEntryMetadata", {
  enumerable: true,
  get: function get() {
    return _Storage.StorageEntryMetadata;
  }
});
Object.defineProperty(exports, "StorageEntryMetadataValue", {
  enumerable: true,
  get: function get() {
    return _Storage.StorageEntryMetadataValue;
  }
});
Object.defineProperty(exports, "StorageEntryType", {
  enumerable: true,
  get: function get() {
    return _Storage.StorageEntryType;
  }
});
exports.StorageMetadata = void 0;

var _Struct = _interopRequireDefault(require("../../codec/Struct"));

var _Vec = _interopRequireDefault(require("../../codec/Vec"));

var _Storage = require("../v6/Storage");

// Copyright 2017-2019 @polkadot/types authors & contributors
// This software may be modified and distributed under the terms
// of the Apache-2.0 license. See the LICENSE file for details.
// Re-export classes that haven't changed between V6 and V7
class StorageMetadata extends _Struct.default {
  constructor(value) {
    super({
      prefix: 'Text',
      // NOTE renamed to items from entries (since Struct already has entries from Map)
      items: _Vec.default.with(_Storage.StorageEntryMetadata)
    }, value);
  }
  /**
   * @description the storage entries
   */


  get items() {
    return this.get('items');
  }
  /**
   * @description the prefix for this module
   */


  get prefix() {
    return this.get('prefix');
  }

}

exports.StorageMetadata = StorageMetadata;