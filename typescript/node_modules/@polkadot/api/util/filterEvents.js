"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = filterEvents;

var _logging = _interopRequireDefault(require("./logging"));

// Copyright 2017-2019 @polkadot/api authors & contributors
// This software may be modified and distributed under the terms
// of the Apache-2.0 license. See the LICENSE file for details.
function filterEvents(extHash, _ref, allEvents) {
  let {
    block: {
      extrinsics,
      header
    }
  } = _ref;
  // extrinsics to hashes
  const myHash = extHash.toHex();
  const allHashes = extrinsics.map(ext => ext.hash.toHex()); // find the index of our extrinsic in the block

  const index = allHashes.indexOf(myHash); // if we do get the block after finalized, it _should_ be there

  if (index === -1) {
    _logging.default.warn("block ".concat(header.hash, ": Unable to find extrinsic ").concat(myHash, " inside ").concat(allHashes));

    return;
  }

  return allEvents.filter((_ref2) => {
    let {
      phase
    } = _ref2;
    return (// only ApplyExtrinsic has the extrinsic index
      phase.isApplyExtrinsic && phase.asApplyExtrinsic.eqn(index)
    );
  });
}