"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _method = _interopRequireDefault(require("./create/method"));

// Copyright 2017-2019 @polkadot/jsonrpc authors & contributors
// This software may be modified and distributed under the terms
// of the Apache-2.0 license. See the LICENSE file for details.
// NOTE order here is the same as in Rust, alphabetical below
const name = {
  description: 'Retrieves the node name',
  params: [],
  type: 'Text'
};
const version = {
  description: 'Retrieves the version of the node',
  params: [],
  type: 'Text'
};
const chain = {
  description: 'Retrieves the chain',
  params: [],
  type: 'Text'
};
const properties = {
  description: 'Get a custom set of properties as a JSON object, defined in the chain spec',
  params: [],
  type: 'ChainProperties'
};
const health = {
  description: 'Return health status of the node',
  params: [],
  type: 'Health'
};
const peers = {
  description: 'Returns the currently connected peers',
  params: [],
  type: 'Vec<PeerInfo>'
};
const networkState = {
  description: 'Returns current state of the network',
  params: [],
  type: 'NetworkState'
};
const section = 'system';
/**
 * @summary Calls to retrieve system info.
 */

var _default = {
  isDeprecated: false,
  isHidden: false,
  description: 'Calls to retrieve system info',
  section,
  methods: {
    chain: (0, _method.default)(section, 'chain', chain),
    health: (0, _method.default)(section, 'health', health),
    name: (0, _method.default)(section, 'name', name),
    networkState: (0, _method.default)(section, 'networkState', networkState),
    peers: (0, _method.default)(section, 'peers', peers),
    properties: (0, _method.default)(section, 'properties', properties),
    version: (0, _method.default)(section, 'version', version)
  }
};
exports.default = _default;